<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBoat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objOnTheSurface</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup base variables

/// For movement
maxForward = 2;
maxTurn = 1;

maxSpeed = 5;
maxTurnSpeed = 2;

numFrames = 60;
turnFrames = 20;

decelPct = 0.6;
accelPct = 1 - decelPct;

accelFrames = numFrames * accelPct;
decelFrames = numFrames - accelFrames;

turnAccelFrames = turnFrames * accelPct;
turnDecelFrames = turnFrames - turnAccelFrames;

moveAccel = maxForward / accelFrames;
turnAccel = maxTurn / turnAccelFrames;

moveDecel = maxForward / decelFrames;
turnDecel = maxTurn / turnDecelFrames;

//Which frame of movement are we on
curFrame = numFrames + 1;

//Starts out not moving
curForward = 0;
curTurn = 0;

///For turn direction
dir = 1;
reachedDir = false;


///Set initial direction
direction = 0;


//Bouncing off an emey?
bouncing = false;
bounceDir = 0;
bounceMax = 3;
bounceSpeed = bounceMax;
bounceDec = bounceMax;
bounceStartDir = 0;

//setup object-dependent variables
alarm[11] = 1;
waterSpeed = 0;

//For strong currents
flowing = false;
flowDirection = 0;
flowStrength = 5;

//Lilypad?
isInLilypad = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sets the speed of the current
ws = 0;
with (objGameControl) {
  other.ws = waterSpeed;
}

waterSpeed = ws;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop bouncing
bouncing = false;
direction = bounceStartDir;
speed = 0;
curFrame = numFrames + 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for lilypad

if (place_meeting(x, y, objLilypad)) {
  isInLilypad = true;
} else {
  isInLilypad = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for strokes

if ((curFrame &gt; accelFrames || curFrame &gt; numFrames) &amp;&amp; scrCheckLeftButton()) {
  //curForward = maxForward;
 // curTurn = maxTurn; 
  curFrame = 0;
  dir = 1;
  reachedDir = false;
  sprite_index = sprRightRow;
  image_index = 0;
}

if ((curFrame &gt; accelFrames || curFrame &gt; numFrames)  &amp;&amp; scrCheckRightButton()) {
//  curForward = maxForward;
//  curTurn = -1 * maxTurn; 
  curFrame = 0;
  dir = -1;
  reachedDir = false;  
  sprite_index = sprLeftRow;
  image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objBoat</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

if (!bouncing) {

  //Set speed  
  speed = curForward;
  if (isInLilypad) {
    speed *= 0.5;
  }
    
  if (curFrame &lt; accelFrames) {  
    direction += curTurn;
    
    curForward += moveAccel;
    curTurn += turnAccel * dir;
  
   //If in middle of turn, turn harder  
   if (sign(curTurn) != sign(dir)) {
    curTurn += turnAccel * dir;
   }
    
    curFrame += 1;
  } else if (curForward &gt; 0) {

    direction += curTurn;
    
    curForward -= moveDecel;
    
    if (sign(curTurn) == sign(dir)) {
      reachedDir = true;
    }
    
    if (!reachedDir || sign(curTurn) == sign(dir)) {
      curTurn -= turnDecel * dir;
    } else {
      curTurn = 0;
    }
    
    curFrame += 1;
  
  } else {
    curForward = 0;
    speed = 0;
    curTurn = 0;
    sprite_index = sprBoat;
    curFrame = numFrames + 1;
  }
  
  if (curForward &gt; maxSpeed) {
    curForward = maxSpeed;
  } else if (abs(curTurn) &gt; maxTurnSpeed) {
    curTurn = maxTurnSpeed * sign(curTurn);
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Facing
/*
{image_index=0}//up
{image_index=1}//up-left
{image_index=2}//left
{image_index=3}//down-left
{image_index=4}//down
{image_index=5}//down-right
{image_index=6}//right
{image_index=7}//right-up
*/
/*
if direction &gt;22 &amp;&amp; direction &lt;67 {image_index=7}//right-up
if direction &gt;66 &amp;&amp; direction &lt;112 {image_index=0}//up
if direction &gt;111 &amp;&amp; direction &lt;157 {image_index=1}//up-left
if direction &gt;156 &amp;&amp; direction &lt;202 {image_index=2}//left
if direction &gt;201 &amp;&amp; direction &lt;247 {image_index=3}//down-left
if direction &gt;246 &amp;&amp; direction &lt;292 {image_index=4}//down
if direction &gt;291 &amp;&amp; direction &lt;337 {image_index=5}//down-right
if direction &lt;23 or direction &gt;336 {image_index=6}//right
*/

if (!bouncing) {
  image_angle = direction - 90;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Screen edges

//if (x &gt; room_width || x &lt; 0 || y &gt; room_height || y &lt; 0) {
//  x = 640;
//  y = 360;
//}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bounce off enemy

if (bouncing) {
  direction = bounceDir;
  speed = max(speed - bounceDec, 0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Adjust for water current movement
y -= waterSpeed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objStrongCurrent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set flowing and direction

/*
flowing = true;
flowDirection = other.dir;
flowStrength = other.strength;
*/
flowing = true;
direction = other.dir;
speed = other.strength;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objNoShadowObstacle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide with solid objects

//dir = point_direction(other.x, other.y, x, y);
//move_outside_solid(dir, speed);

//move_bounce_solid(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Call collision script

scrCollideWithEnemy(self.id, other.id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objObstacle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide with solid objects

//dir = point_direction(other.x, other.y, x, y);
//move_outside_solid(dir, 10);

//move_bounce_solid(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objCollectible">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide with collectible

scrCollideWithCollectible(self.id, other.id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
